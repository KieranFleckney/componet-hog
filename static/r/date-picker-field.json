{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "date-picker-field",
	"type": "registry:ui",
	"registryDependencies": [
		"./generic-field.json",
		"./date-picker.json"
	],
	"files": [
		{
			"content": "export { default as DatePickerInput } from './date-picker-input.svelte';",
			"type": "registry:file",
			"target": "date-picker-field/index.ts"
		},
		{
			"content": "<script lang=\"ts\" generics=\"T\">\n    import {\n        DatePicker,\n        type DatePickerProps,\n    } from '$UI$/date-picker';\n    import type { BaseInputProps } from '$UI$/form';\n    import { GenericInput } from '$UI$/form-fields/generic-field';\n    import { cn } from '$UTILS$';\n\n    let {\n        property,\n        context,\n        value = $bindable(),\n        class: className,\n        ...restProps\n    }: BaseInputProps<T> & DatePickerProps = $props();\n</script>\n\n<GenericInput {property} {context} {...restProps}>\n    {#snippet control(field)}\n        <DatePicker\n            date={field.state.value}\n            onValueChanged={(e) => field.handleChange(e)}\n            name={field.name}\n            id={field.name}\n            aria-invalid={field.state.meta.isValid ? undefined : 'true'}\n            class={cn('w-full dark:aria-invalid:border-destructive', className)}\n            {...restProps}\n        />\n    {/snippet}\n</GenericInput>\n",
			"type": "registry:file",
			"target": "date-picker-field/date-picker-input.svelte"
		}
	]
}