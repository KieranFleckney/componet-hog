{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "toggle-group-field",
	"type": "registry:ui",
	"devDependencies": [
		"bits-ui@^2.11.3",
		"@internationalized/date@^3.9.0"
	],
	"registryDependencies": [
		"./generic-field.json",
		"toggle-group"
	],
	"files": [
		{
			"content": "export { default as ToggleGroupInput } from './toggle-group-input.svelte';\n",
			"type": "registry:file",
			"target": "toggle-group-field/index.ts"
		},
		{
			"content": "<script lang=\"ts\" generics=\"T\">\n    import * as ToggleGroup from '$lib/components/ui/toggle-group';\n    import type { BaseInputProps } from '$UI$/form';\n    import { GenericInput } from '$UI$/form-fields/generic-field';\n    import { ToggleGroup as ToggleGroupPrimitive } from 'bits-ui';\n\n    let {\n        property,\n        context,\n        ref = $bindable(null),\n        class: className,\n        children,\n        ...restProps\n    }: BaseInputProps<T> & ToggleGroupPrimitive.RootProps = $props();\n</script>\n\n<GenericInput {property} {context} {...restProps}>\n    {#snippet control(field)}\n        <ToggleGroup.Root\n            bind:ref\n            bind:value={() => field.state.value, (e) => field.handleChange(e)}\n            id={field.name}\n            onblur={field.handleBlur}\n            class={className}\n            aria-invalid={field.state.meta.isValid ? undefined : 'true'}\n            {...restProps}\n        >\n            {@render children?.()}\n        </ToggleGroup.Root>\n    {/snippet}\n</GenericInput>\n",
			"type": "registry:file",
			"target": "toggle-group-field/toggle-group-input.svelte"
		}
	]
}