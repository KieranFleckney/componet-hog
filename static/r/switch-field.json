{
	"$schema": "https://shadcn-svelte.com/schema/registry-item.json",
	"name": "switch-field",
	"type": "registry:ui",
	"devDependencies": [
		"bits-ui@^2.11.3",
		"@internationalized/date@^3.9.0"
	],
	"registryDependencies": [
		"./generic-field.json",
		"switch"
	],
	"files": [
		{
			"content": "export { default as SwitchInput } from './switch-input.svelte';",
			"type": "registry:file",
			"target": "switch-field/index.ts"
		},
		{
			"content": "<script lang=\"ts\" generics=\"T\">\n    import { Switch } from '$lib/components/ui/switch';\n    import {\n        type BaseInputProps,\n        FieldErrors,\n        FormDescription,\n        FormLabel,\n    } from '$UI$/form';\n    import { GenericInput } from '$UI$/form-fields/generic-field';\n    import { type WithoutChildrenOrChild } from '$UTILS$';\n    import { Switch as SwitchPrimitive } from 'bits-ui';\n\n    let {\n        property,\n        context,\n        ref = $bindable(null),\n        value = $bindable(),\n        class: className,\n        ...restProps\n    }: BaseInputProps<T> &\n        WithoutChildrenOrChild<SwitchPrimitive.RootProps> = $props();\n</script>\n\n<GenericInput {property} {context} {...restProps}>\n    {#snippet custom(field)}\n        <div\n            class=\"flex flex-row items-center justify-between rounded-lg border p-4 aria-invalid:border-destructive\"\n            aria-invalid={field.state.meta.isValid ? undefined : 'true'}\n        >\n            <div class=\"space-y-0.5\">\n                <FormLabel {context} {property} {field} {...restProps} />\n                <FormDescription {context} {property} {field} {...restProps} />\n                <FieldErrors {context} {property} {field} {...restProps} />\n            </div>\n            <Switch\n                bind:ref\n                bind:checked={\n                    () => field.state.value, (e) => field.handleChange(e)\n                }\n                name={field.name}\n                id={field.name}\n                onblur={field.handleBlur}\n                class={className}\n                aria-invalid={field.state.meta.isValid ? undefined : 'true'}\n                {...restProps}\n            />\n        </div>\n    {/snippet}\n</GenericInput>\n",
			"type": "registry:file",
			"target": "switch-field/switch-input.svelte"
		}
	]
}